name: Build

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env: {}

jobs:
  build:
    name: build
    runs-on: windows-2022
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Versiona
        id: version
        shell: pwsh
        run: |
          $runNumber = "${{ github.run_number }}"
          $commitHash = "${{ github.sha }}"
          $commitCount = (git rev-list --count HEAD)
          $version = "8.2.1.$commitCount"
          $informationalVersion = "8.2.1.$commitCount+$runNumber-fork"
          $asipath = "Prometheus/Prometheus.csproj"
          echo "VERSION=$version" >> $env:GITHUB_ENV
          echo "COMMIT=$commitHash" >> $env:GITHUB_ENV
          (Get-Content "$asipath") -replace '0\.0\.0\.0', "$version" `
                                   -replace 'GIT_COMMIT', "$commitHash" | Set-Content "$asipath"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3

      - name: Restore dependencies (NuGet)
        run: nuget restore prometheus-net.sln

      - name: Build
        run: msbuild /t:Build /p:Configuration=Release /p:ApplicationVersion=%VERSION% prometheus-net.sln

      - name: Pack NuGet packages
        run: msbuild /t:Pack /p:Configuration=Release /p:ApplicationVersion=%VERSION% Prometheus/Prometheus.csproj

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            Prometheus/bin/Release/*.nupkg

      - name: Collect artifacts
        run: |
          mkdir artifacts
          cp Prometheus/bin/Release/*.nupkg artifacts/

      - name: Draft release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191  # v2.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          files: |
            artifacts/*
          draft: true

